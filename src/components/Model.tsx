/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useControls } from 'leva';
import React, { useRef, VFC } from 'react';
import * as THREE from 'three';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
	nodes: {
		Mesh_0001: THREE.Mesh
	}
	materials: {
		['Low_chapeau1.001']: THREE.MeshStandardMaterial
	}
}

const ModelPath = process.env.PUBLIC_URL + '/assets/fallen_angel.glb'

export const Model: VFC<JSX.IntrinsicElements['group']> = props => {
	// add controller
	const datas = useControls('model', {
		rotate: false
	})

	const group = useRef<THREE.Group>()
	const { nodes, materials } = (useGLTF(ModelPath) as unknown) as GLTFResult

	materials['Low_chapeau1.001'].side = THREE.FrontSide

	useFrame(() => {
		if (datas.rotate) {
			group.current!.rotation.y += 0.002
		}
	})

	return (
		<group ref={group} {...props} dispose={null}>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Mesh_0001.geometry}
				material={materials['Low_chapeau1.001']}
			/>
		</group>
	)
}

useGLTF.preload(ModelPath)
